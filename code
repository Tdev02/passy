import json
import os
from cryptography.fernet import Fernet

# Generate or load the encryption key
def load_key():
    """Load the key from a file or generate a new one."""
    if not os.path.exists("key.key"):
        key = Fernet.generate_key()
        with open("key.key", "wb") as key_file:
            key_file.write(key)
    else:
        with open("key.key", "rb") as key_file:
            key = key_file.read()
    return key

# Initialize the Fernet object
key = load_key()
fernet = Fernet(key)

# Password file
PASSWORD_FILE = "passwords.json"

# Ensure password file exists
def initialize_password_file():
    if not os.path.exists(PASSWORD_FILE):
        with open(PASSWORD_FILE, "w") as file:
            json.dump({}, file)

initialize_password_file()

# Save a password
def save_password(service, username, password):
    """Encrypt and save the password for a service."""
    with open(PASSWORD_FILE, "r") as file:
        passwords = json.load(file)

    encrypted_password = fernet.encrypt(password.encode()).decode()
    passwords[service] = {"username": username, "password": encrypted_password}

    with open(PASSWORD_FILE, "w") as file:
        json.dump(passwords, file)

    print(f"Password for {service} saved successfully!")

# Retrieve a password
def retrieve_password(service):
    """Retrieve and decrypt the password for a service."""
    with open(PASSWORD_FILE, "r") as file:
        passwords = json.load(file)

    if service in passwords:
        encrypted_password = passwords[service]["password"]
        username = passwords[service]["username"]
        decrypted_password = fernet.decrypt(encrypted_password.encode()).decode()
        print(f"Service: {service}\nUsername: {username}\nPassword: {decrypted_password}")
    else:
        print(f"No password found for {service}.")

# Delete a password
def delete_password(service):
    """Delete a password for a service."""
    with open(PASSWORD_FILE, "r") as file:
        passwords = json.load(file)

    if service in passwords:
        del passwords[service]
        with open(PASSWORD_FILE, "w") as file:
            json.dump(passwords, file)
        print(f"Password for {service} deleted successfully!")
    else:
        print(f"No password found for {service}.")

# Main menu
def main():
    """Main menu for the password manager."""
    while True:
        print("\nPassword Manager")
        print("1. Save Password")
        print("2. Retrieve Password")
        print("3. Delete Password")
        print("4. Exit")

        choice = input("Enter your choice: ")
        if choice == "1":
            service = input("Enter the service name: ")
            username = input("Enter the username: ")
            password = input("Enter the password: ")
            save_password(service, username, password)
        elif choice == "2":
            service = input("Enter the service name: ")
            retrieve_password(service)
        elif choice == "3":
            service = input("Enter the service name: ")
            delete_password(service)
        elif choice == "4":
            print("Exiting Password Manager. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
